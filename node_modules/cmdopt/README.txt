================
cmdopt.js README
================

Release: 0.2.0


About
-----

cmdopt.js is command-line option parser for Node.js.


Install
-------

::

	$ npm install cmdopt


Usage
-----

Example::

	/// define option, desc, and action
	var cmdopt = require('cmdopt');
	var parser = new cmdopt.Parser();
	parser.option("-h, --help",      "show help");
	parser.option("-f, --file=FILE", "read file");
	/// parse args
	var args = process.argv.slice(2);
	var defaults = {file: 'config.json'};
	try {
	  var opts = parser.parse(args, defaults);
	  console.log(opts);
	  if (opts.help) console.log(parser.help());
	} catch (ex) {
	  if (ex instanceof cmdopt.ParseError) {
	    process.stderr.write(ex.message + "\n");
	    process.exit(1);
	  }
	  throw ex;
	}

More example::

	/// no argument
	parser.option("-h",         "show help");
	parser.option("--help",     "show help");
	parser.option("-h, --help", "show help");
	/// required argument
	parser.option("-f FILE",         "read file");
	parser.option("--file=FILE",     "read file");
	parser.option("-f, --file=FILE", "read file");
	/// optional argument
	parser.option("-i[N]",            "indent width");
	parser.option("--indent[=N]",     "indent width");
	parser.option("-i, --indent[=N]", "indent width");

Validation::

	parser.option("-m, --mode=MODE", "set mode")
	      .validation(function(val) {
	           if (val != 'verbose' && val != 'quiet')
	               return "'verbose' or 'quiet' expected.";
	           return null;
	       });
	parser.option("-i, --indent[=N]", "indent width (default 2)")
	      .validation(function(val) {
	           if (val !== true && ! val.match(/^\d+$/))
	               return "integer required.";
	           return null;
	       });

Action::

	/// change default action
	parser.option("--verbose", "quiet mode")
	      .action(function(opts, val) { opts.mode = "verbose"; });
	parser.option("--quiet", "quiet mode")
	      .action(function(opts, val) { opts.mode = "quiet"; });
	
	/// The following definitions...
	parser.option("-h, --help",      "show help");
	parser.option("-f, --file=FILE", "read file");
	/// are equivarent to:
	parser.option("-h, --help",      "show help")
	      .action(function(val) { this.help = true; });
	parser.option("-f, --file=FILE", "read file")
	      .action(function(val) { this.file = val; });

Multiple option::

	/// set custom action function to store values into array
	parser.option("-I path  #paths", "include path (multiple OK)")
	      .action(function(val, opts) {
	           if (! opts.paths) opts.paths = [];
	           opts.paths.push(val);
	       });
	///
	var opts = parser.parse(["-Ipath1", "-Ipath2", "-Ipath3"]);
	assert.deepEqual(opts.paths, ["path1", "path2", "path3"]);

Attrubite name::

	/// usually, long name or sort name is used as options' attribute name.
	parser.option("-h, --help", "show help");
	opts = parser.parse(["-h"]);
	assert.ok(opts.help == true);    // attr name == long name
	parser.option("-h", "show help");
	opts = parser.parse(["-h"]);
	assert.ok(opts.h == true);       // attr name == short name
	/// it is possible to specify attribute name by '#name'.
	/// this is very helpful when you want not to use long name.
	parser.option("-h  #help", "show help");
	opts = parser.parse(["-h"]);
	assert.ok(opts.help == true);    // not opts.h

Help message::

	console.log("Usage: command [options] [file...]\n"
	            + parser.help());    // or parser.help(20, "  ");

Private option::

	parser.option("-D, --debug", null); // private option: no description
	var s = parser.help();
	assert.ok(! s.match(/--debug/));    // not included in help message


History
-------

Release 0.2.0
~~~~~~~~~~~~~

* No compatibility with 0.1.0.
* Add 'cmdopt.Parser.option()' method.
* Remove 'cmdopt.Parser.add()' method.
* Rename 'action' to 'handler'.
* Change arguments order of handler function.

Release 0.1.0
~~~~~~~~~~~~~

* Rewrited from scratch.
* No compatibility with 0.0.1.
* Add 'examples/hello.js'

Release 0.0.1
~~~~~~~~~~~~~

* Public released


License
-------

$License: MIT License $


Copyright
---------

$Copyright: copyright(c) 2011 kuwata-lab.com all rights reserved $
